* QUICK INSTRUCTIONS:

The configure script is a convenience wrapper. For a Perl build of biolib:

  ./configure
	make
	make test
	make install

For a Ruby build:

  ./configure --with-ruby
	make
	make test
	make install

For a Perl build:

  ./configure --with-perl
	make
	make test
	make install

** Using CMake directly

The following makes the default libraries:

  cmake .
  make
  make test

** Using Rake (with Ruby)

To install BioLib with Ruby support one can simply execute rake:

  rake build
	rake test
	rake install

For installations specific to Perl, Python etc. see below.

* INSTALL biolib

Install or build the following tools on your system

  gcc    >  3.3.x  (usually default on Linux)
  cmake  >= 2.6    (2008 distributions - needed for SWIG support)
  swig   >= 1.3.33 (2008 distributions)
  python >= 2.4    (if you want Python support)
  ruby   >= 1.8.6  (if you want Ruby support)
  perl   >= 5.8.8  (if you want Perl support)

So for Debian you can do:

  apt-get install g++ cmake swig r-base zlib1g-dev python ruby perl

see also ./doc/DEPENDENCIES.txt for more information on runtime libraries.
cmake 2.6 is available in Debian testing and etch-backports. 

To build all Bio* biolib modules use:

        ./install.sh

which executes

        cmake .
        make
        make test
        su -c make install

Now see if you can run the following:

        ruby src/mappings/swig/ruby/test/test_example.rb

or,

        ruby -I ./src/mappings/swig/ruby/example/ src/mappings/swig/ruby/test/test_example.rb

biolib installs its shared C libraries by default in /usr/lib - as
defined in ./cmake_modules/FindBioLib.cmake. To have your programs find the
shared libraries you may have to add '/usr/lib' to ld.so.conf or add
it the LD_LIBRARY_PATH.

To change the default installation path use, for example:

        cmake -DCMAKE_INSTALL_PREFIX=/opt/biolib .
        make
        make install

which puts the shared libraries in /opt/biolib/lib.

Ruby libraries get installed in the Ruby module path.

To install libraries for Python or Perl you'll need to copy the appropriate
modules directly, at this point. Support for Ruby gems, Python eggs and Perl
CPAN will be implemented (at some point). 


** RUBY

To build BioLib RUBY libraries:

        cmake -DBUILD_RUBY:BOOLEAN=TRUE .
        make
        ctest
        su -c make install

** PYTHON

To build BioLib PYTHON libraries:

        cmake -DBUILD_PYTHON:BOOLEAN=TRUE .
        make
        ctest

** PERL

To build BioLib PERL libraries:

        cmake -DBUILD_PERL:BOOLEAN=TRUE .
        make
        ctest

** Build specific libraries only

Some libraries may have dependencies that are not relevant to your needs. For 
example you may want to install the Staden for Perl only you can pass parameters:

  sh scripts/cleanup.sh
  cmake -DSTADEN_LIB:BOOLEAN=TRUE -DBUILD_PERL:BOOLEAN=TRUE .
	make
	su -c make install


** APIDOC

To build the API documentation (low-level 'C')

        cmake -DBUILD_DOCS:BOOLEAN=TRUE .
        make apidoc

** TROUBLE SHOOTING

When switching between build parameters make sure to remove the CMakeCache.txt
file in all directories.  This can be achieved with sh ./scripts/cleanup.sh.


