# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _bpp_apptools
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class ApplicationTools(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ApplicationTools, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ApplicationTools, name)
    __repr__ = _swig_repr
    __swig_setmethods__["error"] = _bpp_apptools.ApplicationTools_error_set
    __swig_getmethods__["error"] = _bpp_apptools.ApplicationTools_error_get
    if _newclass:error = _swig_property(_bpp_apptools.ApplicationTools_error_get, _bpp_apptools.ApplicationTools_error_set)
    __swig_setmethods__["message"] = _bpp_apptools.ApplicationTools_message_set
    __swig_getmethods__["message"] = _bpp_apptools.ApplicationTools_message_get
    if _newclass:message = _swig_property(_bpp_apptools.ApplicationTools_message_get, _bpp_apptools.ApplicationTools_message_set)
    __swig_setmethods__["warning"] = _bpp_apptools.ApplicationTools_warning_set
    __swig_getmethods__["warning"] = _bpp_apptools.ApplicationTools_warning_get
    if _newclass:warning = _swig_property(_bpp_apptools.ApplicationTools_warning_get, _bpp_apptools.ApplicationTools_warning_set)
    __swig_setmethods__["startTime"] = _bpp_apptools.ApplicationTools_startTime_set
    __swig_getmethods__["startTime"] = _bpp_apptools.ApplicationTools_startTime_get
    if _newclass:startTime = _swig_property(_bpp_apptools.ApplicationTools_startTime_get, _bpp_apptools.ApplicationTools_startTime_set)
    __swig_setmethods__["terminalWidth"] = _bpp_apptools.ApplicationTools_terminalWidth_set
    __swig_getmethods__["terminalWidth"] = _bpp_apptools.ApplicationTools_terminalWidth_get
    if _newclass:terminalWidth = _swig_property(_bpp_apptools.ApplicationTools_terminalWidth_get, _bpp_apptools.ApplicationTools_terminalWidth_set)
    __swig_setmethods__["terminalSplit"] = _bpp_apptools.ApplicationTools_terminalSplit_set
    __swig_getmethods__["terminalSplit"] = _bpp_apptools.ApplicationTools_terminalSplit_get
    if _newclass:terminalSplit = _swig_property(_bpp_apptools.ApplicationTools_terminalSplit_get, _bpp_apptools.ApplicationTools_terminalSplit_set)
    def __init__(self, *args): 
        this = _bpp_apptools.new_ApplicationTools(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _bpp_apptools.delete_ApplicationTools
    __del__ = lambda self : None;
    __swig_getmethods__["parameterExists"] = lambda x: _bpp_apptools.ApplicationTools_parameterExists
    if _newclass:parameterExists = staticmethod(_bpp_apptools.ApplicationTools_parameterExists)
    __swig_getmethods__["getDoubleParameter"] = lambda x: _bpp_apptools.ApplicationTools_getDoubleParameter
    if _newclass:getDoubleParameter = staticmethod(_bpp_apptools.ApplicationTools_getDoubleParameter)
    __swig_getmethods__["getIntParameter"] = lambda x: _bpp_apptools.ApplicationTools_getIntParameter
    if _newclass:getIntParameter = staticmethod(_bpp_apptools.ApplicationTools_getIntParameter)
    __swig_getmethods__["getStringParameter"] = lambda x: _bpp_apptools.ApplicationTools_getStringParameter
    if _newclass:getStringParameter = staticmethod(_bpp_apptools.ApplicationTools_getStringParameter)
    __swig_getmethods__["getBooleanParameter"] = lambda x: _bpp_apptools.ApplicationTools_getBooleanParameter
    if _newclass:getBooleanParameter = staticmethod(_bpp_apptools.ApplicationTools_getBooleanParameter)
    __swig_getmethods__["getAFilePath"] = lambda x: _bpp_apptools.ApplicationTools_getAFilePath
    if _newclass:getAFilePath = staticmethod(_bpp_apptools.ApplicationTools_getAFilePath)
    __swig_getmethods__["displayMessage"] = lambda x: _bpp_apptools.ApplicationTools_displayMessage
    if _newclass:displayMessage = staticmethod(_bpp_apptools.ApplicationTools_displayMessage)
    __swig_getmethods__["displayError"] = lambda x: _bpp_apptools.ApplicationTools_displayError
    if _newclass:displayError = staticmethod(_bpp_apptools.ApplicationTools_displayError)
    __swig_getmethods__["displayWarning"] = lambda x: _bpp_apptools.ApplicationTools_displayWarning
    if _newclass:displayWarning = staticmethod(_bpp_apptools.ApplicationTools_displayWarning)
    __swig_getmethods__["displayTask"] = lambda x: _bpp_apptools.ApplicationTools_displayTask
    if _newclass:displayTask = staticmethod(_bpp_apptools.ApplicationTools_displayTask)
    __swig_getmethods__["displayTaskDone"] = lambda x: _bpp_apptools.ApplicationTools_displayTaskDone
    if _newclass:displayTaskDone = staticmethod(_bpp_apptools.ApplicationTools_displayTaskDone)
    __swig_getmethods__["displayGauge"] = lambda x: _bpp_apptools.ApplicationTools_displayGauge
    if _newclass:displayGauge = staticmethod(_bpp_apptools.ApplicationTools_displayGauge)
    __swig_getmethods__["startTimer"] = lambda x: _bpp_apptools.ApplicationTools_startTimer
    if _newclass:startTimer = staticmethod(_bpp_apptools.ApplicationTools_startTimer)
    __swig_getmethods__["displayTime"] = lambda x: _bpp_apptools.ApplicationTools_displayTime
    if _newclass:displayTime = staticmethod(_bpp_apptools.ApplicationTools_displayTime)
    __swig_getmethods__["getTime"] = lambda x: _bpp_apptools.ApplicationTools_getTime
    if _newclass:getTime = staticmethod(_bpp_apptools.ApplicationTools_getTime)
ApplicationTools_swigregister = _bpp_apptools.ApplicationTools_swigregister
ApplicationTools_swigregister(ApplicationTools)
cvar = _bpp_apptools.cvar
ApplicationTools_parameterExists = _bpp_apptools.ApplicationTools_parameterExists
ApplicationTools_getDoubleParameter = _bpp_apptools.ApplicationTools_getDoubleParameter
ApplicationTools_getIntParameter = _bpp_apptools.ApplicationTools_getIntParameter
ApplicationTools_getStringParameter = _bpp_apptools.ApplicationTools_getStringParameter
ApplicationTools_getBooleanParameter = _bpp_apptools.ApplicationTools_getBooleanParameter
ApplicationTools_getAFilePath = _bpp_apptools.ApplicationTools_getAFilePath
ApplicationTools_displayMessage = _bpp_apptools.ApplicationTools_displayMessage
ApplicationTools_displayError = _bpp_apptools.ApplicationTools_displayError
ApplicationTools_displayWarning = _bpp_apptools.ApplicationTools_displayWarning
ApplicationTools_displayTask = _bpp_apptools.ApplicationTools_displayTask
ApplicationTools_displayTaskDone = _bpp_apptools.ApplicationTools_displayTaskDone
ApplicationTools_displayGauge = _bpp_apptools.ApplicationTools_displayGauge
ApplicationTools_startTimer = _bpp_apptools.ApplicationTools_startTimer
ApplicationTools_displayTime = _bpp_apptools.ApplicationTools_displayTime
ApplicationTools_getTime = _bpp_apptools.ApplicationTools_getTime



